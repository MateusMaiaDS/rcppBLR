// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// blm
List blm(NumericVector x, NumericVector y, int n_mcmc, int n_burn, int n_chain, double tau_beta, double a_tau, double d_tau);
RcppExport SEXP _rcppBLR_blm(SEXP xSEXP, SEXP ySEXP, SEXP n_mcmcSEXP, SEXP n_burnSEXP, SEXP n_chainSEXP, SEXP tau_betaSEXP, SEXP a_tauSEXP, SEXP d_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n_mcmc(n_mcmcSEXP);
    Rcpp::traits::input_parameter< int >::type n_burn(n_burnSEXP);
    Rcpp::traits::input_parameter< int >::type n_chain(n_chainSEXP);
    Rcpp::traits::input_parameter< double >::type tau_beta(tau_betaSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type d_tau(d_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(blm(x, y, n_mcmc, n_burn, n_chain, tau_beta, a_tau, d_tau));
    return rcpp_result_gen;
END_RCPP
}
// y_post
NumericVector y_post(NumericVector x_new, NumericVector beta_post, NumericVector tau_post);
RcppExport SEXP _rcppBLR_y_post(SEXP x_newSEXP, SEXP beta_postSEXP, SEXP tau_postSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x_new(x_newSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_post(beta_postSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tau_post(tau_postSEXP);
    rcpp_result_gen = Rcpp::wrap(y_post(x_new, beta_post, tau_post));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcppBLR_blm", (DL_FUNC) &_rcppBLR_blm, 8},
    {"_rcppBLR_y_post", (DL_FUNC) &_rcppBLR_y_post, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcppBLR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
